红黑树：
1、根节点为黑色，
2、跟的下两个节点为红色
3、每个叶子节点都有2个黑哨兵
4、如果一个节点只有一个左孩子，那么这个节点的右孩子一定为黑哨兵，
如果一个节点只有一个右孩子，那么这个节点的左孩子一定为黑哨兵
5对于每个节点来说，从该节点到所有子孙节点的所有路径包含相同数目的黑结点
插入
每次插入默认为红色
1、如果插入结点的父节点为黑父，则不需要调整
2、如果插入的节点的父节点为红色，祖父节点那么肯定为黑色，这时候需要看叔父节点
3、如果叔父节点为红色，则不需要进行旋转，只需要把父节点和叔父节点变为黑色，祖父节点变为红色，
但是由于祖父节点的父结点可能为红色，而违反红黑树的性质，此时必须将祖父节点作为新的判断条件继续向上进行平衡操作
需要注意，无论“父”在“叔”的左边还是右边，无论“新”是“父”的左孩子还是右孩子，它们的操作都完全一样。
4、当叔父节点为黑色时，需要进行旋转
LL、LR、RL、RR
删除
它的删除和二叉查找树删除类似
1、删除操作中真正被删除的必定是只有一个红色孩子或者没有孩子的结点
2、如果真正删除的结点是一个红色结点那么它必定是一个叶子节点
我们把真正删除的结点为旧结点，新表示旧结点的孩子结点
2、1、若果删除的旧结点为红色那么直接删除即可
2、2、若果旧结点为黑色，新结点即孩子结点为红色，将新结点取代旧结点，并将新结点染红即可
3、双黑，当旧点和新点都为黑色时候，情况复杂，需要根据旧结点兄弟结点的颜色来决定什么样的操作
我们用兄来表示旧点的兄弟结点，这里可分为红兄和黑兄
3、1红兄，那么多父节点肯定为黑色，进行RR 或者LL旋转，然后将父节点染为红色，兄弟结点为黑色，
此时，兄弟结点和父亲结点进行了交换。
3、2黑兄比较复杂，需要根据黑兄的孩子结点用侄表示，和父节点颜色来决定
3、2、1 黑兄二黑侄红父，此时只需要父节点染为黑色，兄节点黑色，新结点黑色即可，
此时，兄弟结点和父亲结点进行了交换。
3、2、2黑兄二黑侄黑父
此时将父结点染成新结点的颜色，新结点染成黑色，兄结点染成红色即可。当新结点为红色时，父结点被染成红色，
此时需要以父结点为判定点继续向上进行平衡操作。
3、2、3黑兄红侄
